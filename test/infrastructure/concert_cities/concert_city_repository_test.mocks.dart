// Mocks generated by Mockito 5.2.0 from annotations
// in weather_test/test/infrastructure/concert_cities/concert_city_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_test/infrastructure/concert_cities/concert_city_local_data_source.dart'
    as _i2;
import 'package:weather_test/infrastructure/concert_cities/dto/concert_city_dto.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ConcertyCityLocalDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockConcertyCityLocalDataSourceImpl extends _i1.Mock
    implements _i2.ConcertyCityLocalDataSourceImpl {
  MockConcertyCityLocalDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ConcertCityDto>> getConcertCities() =>
      (super.noSuchMethod(Invocation.method(#getConcertCities, []),
          returnValue: Future<List<_i4.ConcertCityDto>>.value(
              <_i4.ConcertCityDto>[])) as _i3.Future<List<_i4.ConcertCityDto>>);
}
